@model dynamic

@{
    ViewBag.Title = "League Settings";

}
@section styles{
    @Styles.Render("~/css/datatables")
}
<h2>League Settings</h2>
<ul class="breadcrumb">
    <li><a href="Index">Index</a></li>
    <li class="active">League Settings</li>
</ul>
<div class="panel panel-default table-responsive">
    <div class="panel-heading">Leagues</div>
    <div class="padding-md clearfix">
        <div class="row">
            <div class="col-md-10">
                <section class="widget">
                    <div class="body">
                        <div class="panel-group" id="accordion3">

                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/js/datatables")


}

<script>
    $(document).ready(function () {
        var columns;
        var editor;
        var oTable;
        var mData;
        var records = [];
        var arrDraftStyles=[];


        var usersRef = new Firebase('https://draftboard.firebaseio.com/Users/user');
        var leaguesRef = new Firebase('https://draftboard.firebaseio.com/Leagues');
        var settingsRef = new Firebase('https://draftboard.firebaseio.com/Settings');
        //console.log(usersRef.toString());
        var leagueAdded = function (snapShot) {
            console.log('snapShot ' + JSON.stringify(snapShot.val()));
            var leagueId = snapShot.name();
            var numSettings = 0;

            $('#accordion3').append(renderAccordion(snapShot.name(), snapShot.val().Name));
            var leagueSettingsRef = leaguesRef.
            child(snapShot.name()).
            child("Settings");





            leagueSettingsRef.once("value", function (snap) {



                numSettings = snap.numChildren();

                if (numSettings !== 0) {
                    //console.log('wtf ' + numSettings);
                    leagueSettingsRef.on("child_added", function (settingSnap) {
                        //console.log('child added ' + settingSnap.name());
                            //console.log('ffjfjfjfjfj');
                        var o = settingSnap.val();
                            //o.leagueId = leagueId;
                        o.DT_RowId = settingSnap.name();
                            records.push(o);
                            //console.log('records length ' + records.length);
                            //console.log('numSettings ' + numSettings);
                            if (records.length === numSettings) {

                                //console.log('records ' + JSON.stringify(records));
                                initializeDataTable(leagueId);
                            }
                       
                    });
                }
                else {

                    initializeDataTable(leagueId);
                }

            });

        };



        defineDraftStyle(function () {
            defineTableColumns();
            defineEditor();
            defineEvents();
        });
       


        function defineDraftStyle(callback) {
            var numDraftStyles = 0;
            var draftStyleRef = settingsRef.startAt("Draft Style").endAt("Draft Style");
            
            draftStyleRef.
                on('child_added', function (snapShot) {
                    //var options = snapShot.parent();
                    //console.log('snapShot ' + JSON.stringify(snapShot.val()));
                    //console.log('snapShotName ' + snapShot.name());

                    settingsRef.
                        child(snapShot.name()).
                        child("Options").
                        once('value', function (optionsSnap) {
                            numDraftStyles = optionsSnap.numChildren();
                            console.log('numDraftStyles ' + numDraftStyles);
                            var o = {};
                            o.label = '** Select **';
                            o.value = '';
                            arrDraftStyles.push(o);

                            settingsRef.
                                child(snapShot.name()).
                                child("Options").
                                on('child_added', function (childSnapShot) {

                                o = {};
                                    //console.log('childSnapShot ' + JSON.stringify(childSnapShot.val()));
                                //console.log('childSnapShot Name' + childSnapShot.name());
                                o.label = childSnapShot.val();
                                o.value = childSnapShot.name();
                                //o.value = childSnapShot.name();
                                //console.log('position: ' + JSON.stringify(childSnapShot.val()));
                                arrDraftStyles.push(o);
                                if (arrDraftStyles.length - 1 === numDraftStyles)
                                    callback();
                            });
                        });
                   
            });
        }

        function defineTableColumns() {
            columns = [
        { mData: "Name", sTitle: "Setting Name" },
        { mData: "Value", sTitle: "Setting Value" },
            ];

        }

        function defineEditor() {
            editor = new $.fn.dataTable.Editor({
                "domTable": "#dataTable",
                "fields": [{
                    "label": "DraftStyle:",
                    "name": "DraftStyle.Id",
                    "type": "select",
                    "attr": { "class": "form-control parsley-validated required", "placeholder": "Position", "required": "true", "parsley-required": "true" },
                    "ipOpts": arrDraftStyles,
                },
                {

                    "name": "LeagueId",
                    "type": "hidden",

                },
                 {

                     "name": "DraftStyle.Value",
                     "type": "hidden",

                 },
                 {

                     "name": "DraftStyle.Name",
                     "type": "hidden",

                 },
                ],
                "ajax": function (method, url, data, successCallback, errorCallback) {

                    var id = null;
                    var obj = {};
                    var leagueId;

                    //console.log('data action ' + data.action);

                    if (data.action === 'create') {
                        
                        obj.Id = data.data.DraftStyle.Id;
                        obj.Name = data.data.DraftStyle.Name;
                        obj.Value = data.data.DraftStyle.Value;

                        leagueId = data.data.LeagueId;

                        console.log('obj ' +JSON.stringify(obj));
                        try {

                            id = leaguesRef.
                                child(leagueId).
                                child("Settings").
                                push(obj, function (err) {
                                    if(!err)
                                        successCallback({ "id": id });
                            }).name();

                        } catch (e) {
                            console.log('error ' + e);
                        }

                    }
                    else if (data.action === 'edit') {
                        id = data.id;
                        //console.log('edit id' + data.id);
                        obj.Name = data.data.LeagueName;


                        try {
                            //console.log(exercisesRef.child(id).toString());

                            leaguesRef.child(id).update(obj, function (err) {
                                //console.log('test');

                                successCallback({ "id": id });

                            });
                        } catch (e) {
                            console.log(JSON.stringify(e));
                        }

                    }
                    else if (data.action === 'remove') {

                        try {
                            var r = [];

                            leaguesRef.child(data.data[0]).remove(function (err) {

                                if (!err) {
                                    //r = jQuery.removeFromArray(data.data[0], records);
                                    //records = r;
                                    successCallback({ "id": id });
                                }


                            });
                        } catch (e) {

                        }

                    }

                }
            });

            editor.on('onOpen', function () {

                $("div.DTE_Body_Content form").attr("parsley-validate", "");
                $("div.DTE_Body_Content form").parsley();
            });

            editor.on('onPreSubmit', function () {
                var f = $('form');
                if (f.css('display') != 'none') {
                    var valid = f.parsley('validate');
                    console.log('valid ' + valid);
                    if (valid == false)
                        return false;
                }
            });





        }



        function defineEvents() {

            leaguesRef.on('child_added', leagueAdded);

            $('select', editor.node('DraftStyle.Id')).on('change', function () {
                var setting;
                var settingId = $('select', editor.node('DraftStyle.Id')).val();
                console.log('settingid ' + settingId);
                getSettingBySettingId(settingId, function (setting) {

                    //console.log('setting ' + JSON.stringify(setting));
                    editor.set('DraftStyle.Value', setting.Name);
                    editor.set('DraftStyle.Name', setting.Category);
                });
                
            });

        }



        function initializeDataTable(tableId) {
            //console.log('initialized ' + tableId);
            try {
                oTable = $('#tbl_' + tableId).dataTable({
                    "sDom": "<'row'<'col-xs-6'T><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
                    "aaData": records,
                    "aoColumns": columns,
                    "oTableTools": {
                        "sRowSelect": "single",
                        "aButtons": [
                            { "sExtends": "editor_create", "editor": editor, "sButtonClass": "btn btn-primary" },
                            { "sExtends": "editor_edit", "editor": editor, "sButtonClass": "btn btn-primary" },
                            { "sExtends": "editor_remove", "editor": editor, "sButtonClass": "btn btn-warning" }
                        ]
                    },
                    "bDestroy": true,


                });
            } catch (e) {
                console.log(e);
            }

            if (oTable) {
                console.log('oTable');
                $('.btn').on('click', function () {
                    editor.set('LeagueId', tableId);
                });
            }
        }


        function renderAccordion(collapseId, leagueName) {
            // console.log('collapseId ' + collapseId);
            //console.log('leagueName ' + leagueName);
            //console.log('collapseId ' + collapseId);
            var s = "<div class=\"panel\">"
                    + "<div class=\"row panel-heading\">"
                        + "<div class=\"col-md-12\">"
                            + "<div class=\"panel-heading\">"
                                + "<a class=\"accordion-toggle\" id=\"acc_" + collapseId + "\" data-toggle=\"collapse\" href=\"#" + collapseId + "\">"
                                  + leagueName
                                + "</a>"
                            + "</div>"
                        + "</div>"
                    + "</div>"
                    + "<div id=\"" + collapseId + "\" class=\"panel-collapse collapse\" style=\"height: 0px;\">"
                        + "<div class=\"panel-body\">"
                                + "<header>"
                                + "<h4>"
                                + "<i class=\"fa fa-list-alt\"></i>"
                                + "Leagues"
                                + "</h4>"
                                + "</header>"
                          + "<table class=\"table table-striped table-bordered dataTable\" id=\"tbl_" + collapseId + "\">"
                            + "<thead>"
                                + "<tr>"
                                        + "<th>"
                                            + "Setting"
                                        + "</th>"
                                         + "<th>"
                                            + "Value"
                                        + "</th>"
                                    + "</tr>"
                                + "</thead>"
                            + "</table>"
                        + "</div>"
                    + "</div>"
                + "</div>";

            return s;
        }

        function getSettingBySettingId(id, callback) {
            //console.log('getPositionByPositionId');
            var setting;
            settingsRef.child(id).once('value', function (snapShot) {
                setting = snapShot.val();

                //console.log('snapshot ' + JSON.stringify(snapShot.val()));
                if (setting !== null)
                    callback(setting);
            });

            //console.log('position asdfasdf ' + JSON.stringify(position));

            
        }


    });
</script>