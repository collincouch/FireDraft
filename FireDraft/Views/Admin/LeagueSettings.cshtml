@model dynamic

@{
    ViewBag.Title = "League Settings";

}
@section styles{
    @Styles.Render("~/css/datatables")
}
<h2>League Settings</h2>
<ul class="breadcrumb">
    <li><a href="Index">Index</a></li>
    <li class="active">League Settings</li>
</ul>
<div class="panel panel-default table-responsive">
    <div class="panel-heading">Leagues</div>
    <div class="padding-md clearfix">
        <div class="row">
            <div class="col-md-10">
                <section class="widget">
                    <div class="body">
                        <div class="panel-group" id="accordion3">

                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/js/datatables")


}

<script>
    $(document).ready(function () {
        var columns;
        var editor;
        var oTable;
        var mData;
        var records = [];
        var arrDraftStyles=[];


        var usersRef = new Firebase('https://draftboard.firebaseio.com/Users/user');
        var leaguesRef = new Firebase('https://draftboard.firebaseio.com/Leagues');
        var settingsRef = new Firebase('https://draftboard.firebaseio.com/Settings');
        //console.log(usersRef.toString());
        var leagueAdded = function (snapShot) {
            //console.log('snapShot ' + JSON.stringify(snapShot.val()));
            var leagueId = snapShot.name();
            var numSettings = 0;

            leaguesRef.
                child(leagueId).
                child("Settings").
                on("value", function (snap) {
                    numSettings = snap.numChildren();
                });

            $('#accordion3').append(renderAccordion(snapShot.name(), snapShot.val().Name, numSettings));
           

        };



        defineDraftStyle(function () {

            defineEvents();
        });
       


        function defineDraftStyle(callback) {
            var numDraftStyles = 0;
            var draftStyleRef = settingsRef.startAt("Draft Style").endAt("Draft Style");
            
            draftStyleRef.
                on('child_added', function (snapShot) {
                    //var options = snapShot.parent();
                    //console.log('snapShot ' + JSON.stringify(snapShot.val()));
                    //console.log('snapShotName ' + snapShot.name());

                    settingsRef.
                        child(snapShot.name()).
                        child("Options").
                        once('value', function (optionsSnap) {
                            numDraftStyles = optionsSnap.numChildren();
                            console.log('numDraftStyles ' + numDraftStyles);
                            var o = {};
                            o.label = '** Select **';
                            o.value = '';
                            arrDraftStyles.push(o);

                            settingsRef.
                                child(snapShot.name()).
                                child("Options").
                                on('child_added', function (childSnapShot) {

                                o = {};
                                    //console.log('childSnapShot ' + JSON.stringify(childSnapShot.val()));
                                //console.log('childSnapShot Name' + childSnapShot.name());
                                o.label = childSnapShot.val();
                                o.value = childSnapShot.name();
                                //o.value = childSnapShot.name();
                                //console.log('position: ' + JSON.stringify(childSnapShot.val()));
                                arrDraftStyles.push(o);
                                if (arrDraftStyles.length - 1 === numDraftStyles)
                                    callback();
                            });
                        });
                   
            });
        }

    

        function defineEvents() {

            leaguesRef.on('child_added', leagueAdded);

            //$('select', editor.node('DraftStyle.Id')).on('change', function () {
            //    var setting;
            //    var settingId = $('select', editor.node('DraftStyle.Id')).val();
            //    console.log('settingid ' + settingId);
            //    getSettingBySettingId(settingId, function (setting) {

            //        //console.log('setting ' + JSON.stringify(setting));
            //        editor.set('DraftStyle.Value', setting.Name);
            //        editor.set('DraftStyle.Name', setting.Category);
            //    });
                
            //});

        }



       


        function getLegueSettings(leagueId)
        {
            var leagueSettings = "";
            leaguesRef.
            child(leagueId).
            child("Settings").
            on("child_added", function (snapShot) {
                leagueSettings += snapShot.val().Name + " : " + snapShot.val().Value + "</br>";
            });

            return leagueSettings;
        }

        function renderAccordion(collapseId, leagueName, settingsCount) {
            // console.log('collapseId ' + collapseId);
            //console.log('leagueName ' + leagueName);
            //console.log('collapseId ' + collapseId);

            var createStyle = settingsCount === 0 ? "" : "display:none";
            var editStyle = settingsCount === 0 ? "display:none" : "";
            var s = "<div class=\"panel\">"
                    + "<div class=\"row panel-heading\">"
                        + "<div class=\"col-md-9\">"
                            + "<div class=\"panel-heading\">"
                                + "<a class=\"accordion-toggle\" id=\"acc_" + collapseId + "\" data-toggle=\"collapse\" href=\"#" + collapseId + "\">"
                                  + leagueName
                                + "</a>"
                            + "</div>"
                        + "</div>"
                        + "<div class=\"col-md-3\">"
                            + "<div class=\"row\">"
                                + "<div class=\"col-xs-3\">"
                                    + "<div class=\"leagueSettings_" + collapseId + "\"style=\"" + createStyle + "\">"
                                    + "<a data-action=\"\" href=\"LeagueSettingsCreateEdit/" + collapseId + "\">"
                                    + "<span class=\"badge badge-success\">New</span>"
                                    + "</a>"
                                + "</div>"
                                + "<div class=\"leagueSettings_" + collapseId + "\"" + "\"style=\"" + editStyle + "\">"
                                    + "<a data-action=\"\" href=\"LeagueSettingsCreateEdit/" + collapseId + "\">"
                                    + "<span class=\"badge badge-danger\">Edit</span>"
                                    + "</a>"
                                + "</div>"
                            + "</div>"
                        + "</div>"
                    + "</div>"
                    + "<div id=\"" + collapseId + "\" class=\"panel-collapse collapse\" style=\"height: 0px;\">"
                        + "<div class=\"panel-body\">"
                            + "<header>"
                            + "<h4>"
                            + "<i class=\"fa fa-list-alt\"></i>"
                            + "Settings"
                            + "</h4>"
                            + "</header>"
                            + "<p>"
                            + getLegueSettings(collapseId);
                            + "</p>"
                        + "</div>"
                    + "</div>"
                + "</div>";

            return s;
        }

        function getSettingBySettingId(id, callback) {
            //console.log('getPositionByPositionId');
            var setting;
            settingsRef.child(id).once('value', function (snapShot) {
                setting = snapShot.val();

                //console.log('snapshot ' + JSON.stringify(snapShot.val()));
                if (setting !== null)
                    callback(setting);
            });

            //console.log('position asdfasdf ' + JSON.stringify(position));

            
        }


    });
</script>