@model string

@{
    ViewBag.Title = "Draft Board Setup";

}
@section styles{
   @Styles.Render("~/css/datatables")
}
<h2>League Settings</h2>
<ul class="breadcrumb">
    <li><a href="Index">Index</a></li>
    <li><a href="LeagueSettings">League Settings</a></li>
    <li class="active">Create/Edit</li>
</ul>
<div class="panel panel-default table-responsive">
    <div class="panel-heading">Draft Board Setup</div>
    <div class="padding-md clearfix">
        <div class="row">
            <div class="col-md-10">
                <div class="panel panel-default">
                    <form class="form-horizontal no-margin form-border" id="formWizard1" data-parsley-validate>
                        <div class="panel-heading">
                            Form Wizard
                        </div>
                        <div class="panel-tab">
                            <ul class="wizard-steps wizard-demo" id="wizardDemo1">
                                <li class="active">
                                    <a href="#wizardContent1" data-toggle="tab">Step 1</a>
                                </li>
                                <li>
                                    <a href="#wizardContent2" data-toggle="tab">Step 2</a>
                                </li>
                                <li>
                                    <a href="#wizardContent3" data-toggle="tab">Step 3</a>
                                </li>
                                <li>
                                    <a href="#wizardContent4" data-toggle="tab">Step 4</a>
                                </li>
                            </ul>
                        </div>

                        <div class="panel-body">
                            <div class="tab-content">
                                <div class="tab-pane fade in active" id="wizardContent1">
                                    <div class="form-group">
                                        <label class="control-label col-lg-2">Draft Style</label>
                                        <div class="col-lg-6">
                                            <select id="selDraftStyle" data-required="true" class="form-control">
                                                <option class="select-box-option" value="">** Select **</option>
                                                <option class="select-box-option" value="Standard">Standard</option>
                                                <option class="select-box-option" value="Auction">Auction</option>
                                            </select>
                                        </div>
                                        <!-- /.col -->
                                    </div><!-- /form-group -->
                                    <div class="form-group">
                                        <div id="numRounds">
                                            <label class="control-label col-lg-2">Number of Rounds</label>
                                            <div class="col-lg-6">
                                                <input id="txtNumRounds" type="number" placeholder="Password" class="form-control input-sm" data-required="true" data-parsley-group="grpNumRounds">
                                            </div><!-- /.col -->
                                        </div>
                                        <div id="salaryCap" style="display:none">
                                            <label class="control-label col-lg-2">Salary Cap</label>
                                            <div class="col-lg-6">
                                                <input id="txtSalCap" type="number" placeholder="SalaryCap" class="form-control input-sm" data-required="true" data-parsley-group="salaryCap">
                                            </div><!-- /.col -->
                                        </div>

                                    </div><!-- /form-group -->
                                    <div class="form-group">
                                        <label class="control-label col-lg-2">Include Individual Defensive Players</label>
                                        <div class="col-lg-6">
                                            <input type="checkbox" id="chkIDP" name="chkIDP">
                                            <span class="custom-checkbox"></span>
                                        </div><!-- /.col -->
                                    </div><!-- /form-group -->
                                </div>
                                <div class="tab-pane fade" id="wizardContent2">
                                    @Html.Partial("FantasyTeams")
                                </div>
                                <div class="tab-pane fade padding-md" id="wizardContent3">
                                    @Html.Partial("DraftOrder")
                                </div>
                                <div class="tab-pane fade padding-md" id="wizardContent4">
                                    <h4>Finished</h4>
                                </div>
                            </div>
                        </div>
                        <div class="panel-footer clearfix">
                            <div class="pull-left">
                                <button class="btn btn-success btn-sm disabled" id="prevStep1" disabled>Previous</button>
                                <button type="submit" class="btn btn-sm btn-success" id="nextStep1">Next</button>
                            </div>

                            <div class="pull-right" style="width:30%">
                                <div class="progress progress-striped active m-top-sm m-bottom-none">
                                    <div class="progress-bar progress-bar-success" id="wizardProgress" style="width:25%;">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/js/pace")
    @Scripts.Render("~/js/endless")
    @Scripts.Render("~/js/datatables")
@Scripts.Render("~/js/nestable")
}

<script>
    $(document).ready(function () {
        var columns;
        var editor;
        var oTable;
        var mData;
        var records = [];
        var arrDraftStyles = [];
        var numTeams = 0;

        var fantasyTeamsRef = new Firebase('https://draftboard.firebaseio.com/FantasyTeams');
        var usersRef = new Firebase('https://draftboard.firebaseio.com/Users/user');
        var leaguesRef = new Firebase('https://draftboard.firebaseio.com/Leagues');
        var settingsRef = new Firebase('https://draftboard.firebaseio.com/Settings');
        var pathname = window.location.pathname.split("/");
        var leagueId = pathname[pathname.length - 1];

        //Form Wizard 1
        var currentStep_1 = 1;

        //Form Wizard 2
        var currentStep_2 = 1;

        //console.log(usersRef.toString());
        var leagueAdded = function (snapShot) {
            //console.log('snapShot ' + JSON.stringify(snapShot.val()));
            var leagueId = snapShot.name();
            var numSettings = 0;

            leaguesRef.
                child(leagueId).
                child("Settings").
                on("value", function (snap) {
                    numSettings = snap.numChildren();
                });

            $('#accordion3').append(renderAccordion(snapShot.name(), snapShot.val().Name, numSettings));


        };



       
       
           
        getDraftSettings();
        defineEvents();
        defineTableColumns();
        defineEditor();
        defineFantasyTeamEvents();

        function getDraftSettings()
                {

            leaguesRef.
            child(leagueId).
            child("Settings").
            on("child_added", function (snapShot) {
                
              
                switch (snapShot.name().toUpperCase())
                {

                    case "DRAFTSTYLE":
                        $("#selDraftStyle").val(snapShot.val());
                        break;
                    case "NUMBEROFROUNDS":
                        $("#txtNumRounds").val(snapShot.val());
                   
                        break;
                    case "SALARYCAP":
                        //salary cap is hidden on load so I need to show it, if the value exists
                        $("#numRounds").toggle(false);
                        $("#salaryCap").toggle(true);
                        $("#txtSalCap").val(snapShot.val());
                        break;
                    case "INDIVIDUALDEFENSIVEPLAYERS":
                        $("#chkIDP").prop('checked', snapShot.val());
                        break;
                }

            });
        }


        function defineEvents() {

            //$('#formWizard1').parsely().subscribe('parsley:form:validate', function (formInstance) {
            //    //if (!$(elem).is(':visible')) {
            //    //    console.log(elem);
            //    //    return true;
            //    //}

            //    console.log('sdfasdf');


            //    if (formInstance.isValid('block1'))
            //        return;

            //    // else stop form submission
            //    formInstance.submitEvent.preventDefault();
            //});

            $("#selDraftStyle").on("change", function () {
                
                if ($("#selDraftStyle").val().toUpperCase() !== "STANDARD") {
                    $("#numRounds").toggle(false);
                    $("#salaryCap").toggle(true);

                }
                else if ($("#selDraftStyle").val().toUpperCase() !== "AUCTION") {
                    $("#numRounds").toggle(true);
                    $("#salaryCap").toggle(false);
                  
                }
                else {
                    $("#numRounds").toggle(true);
                    $("#salaryCap").toggle(true);

                }

                
            });

        }


      

        $('#formWizard1').parsley({
            listeners: {
                onFieldValidate: function (elem) {
                    // if field is not visible, do not apply Parsley validation!
                    if (!$(elem).is(':visible')) {
                        return true;
                    }

                    return false;
                },
                onFormSubmit: function (isFormValid, event) {
                    event.preventDefault();
                    //alert('testing form submit');
                    if (isFormValid) {

                        
                            currentStep_1++;

                            if (currentStep_1 == 2) {
                                saveFormWizard1(function () {
                                    $('#wizardDemo1 li:eq(1) a').tab('show');
                                    $('#wizardProgress').css("width", "50%");

                                    $('#prevStep1').attr('disabled', false);
                                    $('#prevStep1').removeClass('disabled');
                                });
                            }
                            else if (currentStep_1 == 3) {
                                $('#wizardDemo1 li:eq(2) a').tab('show');
                                $('#wizardProgress').css("width", "75%");

                                $('#prevStep1').attr('disabled', false);
                                $('#prevStep1').removeClass('disabled');
                            }
                            else if (currentStep_1 == 4) {
                                $('#wizardDemo1 li:eq(3) a').tab('show');
                                $('#wizardProgress').css("width", "100%");

                                $('#nextStep1').attr('disabled', true);
                                $('#nextStep1').addClass('disabled');
                            }

                            
                            return false;

                        //});
                       
                    }
                }
            }
        });

        function saveFormWizard1(callback) {

            var objDraftStyle = {},
                objNumRounds = {},
                objSalaryCap = {},
                draftStyleId = $("#draftStyleId").val(),
                numRoundsId = $("#numRoundsId").val(),
                salaryCapId = $("#salCapId").val(),
                 leagueSettingsRef = leaguesRef.
            child(leagueId).
            child("Settings"),
            indivDefPlayers = $("#chkIDP").is(':checked');

      

            leagueSettingsRef.
                child("DraftStyle").
                set( $("#selDraftStyle").val(), function (err) {
                         if (!err)
                         {
                             if ($("#selDraftStyle").val().toUpperCase() === "STANDARD")
                             {
                                 //remove any salary cap that was set
                                 leagueSettingsRef.
                                     child("SalaryCap").remove(function (err) {
                                         //add the number of rounds
                                         leagueSettingsRef.
                                             child("NumberOfRounds").
                                             set($("#txtNumRounds").val(), function (err) {
                                                 if (!err) {
                                                     leagueSettingsRef.
                                                     child("IndividualDefensivePlayers").
                                                     set(indivDefPlayers, function (err) {
                                                        if(!err)
                                                            callback();
                                                    });
                                                 }
                                                 
                                         });
                                     });

                             }
                             else if ($("#selDraftStyle").val().toUpperCase() === "AUCTION") {
                                 //remove any number of rounds that was set
                                 leagueSettingsRef.
                                     child("NumberOfRounds").remove(function (err) {
                                         //add the salary Cap
                                         leagueSettingsRef.
                                             child("SalaryCap").
                                             set($("#txtSalCap").val(), function (err) {
                                                 if (!err) {
                                                     leagueSettingsRef.
                                                        child("IndividualDefensivePlayers").
                                                        set(indivDefPlayers, function (err) {
                                                            if (!err)
                                                                callback();
                                                        });
                                                 }
                                                 
                                         });
                                     });

                             }
                         }
                             
                     });
              
                
                



        }



        var teamAdded = function (snapShot) {
            console.log('added');
            fantasyTeamsRef.child(snapShot.name()).once("value", function (childSnapShot) {
                //console.log(JSON.stringify(childSnapShot.val()));
                var o = childSnapShot.val();
                o.DT_RowId = childSnapShot.name();
                //o.value = childSnapShot.name();

                records.push(o);

                if (numTeams === records.length)
                    initializeDataTable();

            });
        };


        


        function defineTableColumns() {
            columns = [
        { mData: "FirstName", sTitle: "First Name" },
        { mData: "LastName", sTitle: "Last Name" },
        { mData: "Email", sTitle: "Email" },
        { mData: "TeamName", sTitle: "Team Name" },
            ];

        }


        function defineEditor() {
            editor = new $.fn.dataTable.Editor({
                "domTable": "#dataTable",
                "fields": [{
                    "label": "First Name:",
                    "name": "FirstName",
                    "attr": { "class": "form-control" ,"data-required":"true", "placeholder": "Owner First Name" },
                },
                {
                    "label": "Last Name:",
                    "name": "LastName",
                    "attr": { "class": "form-control", "data-required": "true", "placeholder": "Owner Last Name" },
                },
                {
                    "label": "Email:",
                    "name": "Email",
                    "attr": { "class": "form-control", "data-required": "true", "placeholder": "Owner Email" },
                },
                {
                    "label": "Team Name:",
                    "name": "TeamName",
                    "attr": { "class": "form-control", "data-required": "true", "placeholder": "Fantasy Team Name" },
                },
                {
                    "name": "DT_RowId",
                    "type": "hidden",
                }

                ],
                "i18n": {
                    "create": {
                        "title": "<h4>Enter fantasy owner and team information, and click 'Create'</h4>",
                    },
                    "edit": {
                        "title": "<h4>Edit  fantasy owner and team information, and click 'Update'</h4>",
                    },
                    "remove": {
                        "title": "<h4>Delete your fantasy owner and team.</h4>",
                        "confirm": { "1": "Are you sure you wish to delete this?" }
                    },
                },
                "ajax": function (method, url, data, successCallback, errorCallback) {

                    var id = null;
                    var obj = {};

                    //console.log('data action ' + data.action);

                    if (data.action === 'create') {

                        obj.FirstName = data.data.FirstName;
                        obj.LastName = data.data.LastName;
                        obj.Email = data.data.Email;
                        obj.TeamName = data.data.TeamName;

                        try {

                            id = fantasyTeamsRef.push(obj, function (err) {
                                if (!err) {
                                    leaguesRef.
                                        child(leagueId).
                                        child("FantasyTeams").
                                        child(id).
                                        set(Firebase.ServerValue.TIMESTAMP, function (err) {
                                            if (!err)
                                                successCallback({ "id": id });
                                        });


                                }
                                else
                                    errorCallback();

                            }).name();

                        } catch (e) {
                            console.log('error ' + e);
                        }

                    }
                    else if (data.action === 'edit') {
                        id = data.id;
                        //console.log('edit id' + data.id);
                        obj.FirstName = data.data.FirstName;
                        obj.LastName = data.data.LastName;
                        obj.Email = data.data.Email;
                        obj.TeamName = data.data.TeamName;

                        try {
                            //console.log(exercisesRef.child(id).toString());

                            fantasyTeamsRef.child(id).update(obj, function (err) {
                                //console.log('test');
                                if (!err) {
                                    leaguesRef.
                                        child(leagueId).
                                        child("FantasyTeams").
                                        child(id).
                                        set(Firebase.ServerValue.TIMESTAMP, function (err) {
                                            if (!err)
                                                successCallback({ "id": id });
                                        });
                                }
                            });
                        } catch (e) {
                            console.log(JSON.stringify(e));
                        }

                    }
                    else if (data.action === 'remove') {

                        try {
                            var r = [];

                            fantasyTeamsRef.child(data.data[0]).remove(function (err) {

                                if (!err) {
                                    leaguesRef.
                                        child(leagueId).
                                        child("FantasyTeams").
                                        child(data.data[0]).
                                        remove(function (err) {
                                            if (!err)
                                                successCallback({ "id": id });
                                        });
                                }


                            });
                        } catch (e) {

                        }

                    }

                }
            });

            editor.on('onOpen', function () {

                $("div.DTE_Body_Content form").attr("data-parsley-validate", "");
                
            });

            editor.on('onPreSubmit', function () {
                
                var f = $('div.DTE_Body_Content form');
                if (f.css('display') != 'none') {
                    var valid = f.parsley('validate');
                    console.log('valid ' + valid);
                    if (valid == false)
                        return false;
                }
            });





        }

        function defineFantasyTeamEvents() {
            console.log('test');
            fantasyTeamsRef.on('value', function (snap) {
                numTeams = snap.numChildren();

                console.log('numTeams ' + numTeams);
                fantasyTeamsRef.on('child_added', teamAdded);

                if (numTeams === 0)
                    initializeDataTable();
            });






        }

        function initializeDataTable() {
            console.log('initialized');
            oTable = $('#dataTable').dataTable({
                "sDom": "<'row'<'col-xs-6'T><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
                "aaData": records,
                "aoColumns": columns,
                "oTableTools": {
                    "sRowSelect": "single",
                    "aButtons": [
                        { "sExtends": "editor_create", "editor": editor, "sButtonClass": "btn btn-primary" },
                        { "sExtends": "editor_edit", "editor": editor, "sButtonClass": "btn btn-primary" },
                        { "sExtends": "editor_remove", "editor": editor, "sButtonClass": "btn btn-warning" }
                    ]
                },
                "bDestroy": true,


            });
        }


        $('#prevStep1').click(function () {

            currentStep_1--;

            if (currentStep_1 == 1) {

                $('#wizardDemo1 li:eq(0) a').tab('show');
                $('#wizardProgress').css("width", "50%");

                $('#prevStep1').attr('disabled', true);
                $('#prevStep1').addClass('disabled');

                $('#wizardProgress').css("width", "25%");
            }
            else if (currentStep_1 == 2) {

                $('#wizardDemo1 li:eq(1) a').tab('show');
                $('#wizardProgress').css("width", "75%");

                $('#wizardProgress').css("width", "50%");
            }
            else if (currentStep_1 == 3) {

                $('#wizardDemo1 li:eq(2) a').tab('show');
                $('#wizardProgress').css("width", "75%");

                $('#nextStep1').attr('disabled', false);
                $('#nextStep1').removeClass('disabled');

                $('#wizardProgress').css("width", "75%");
            }

            return false;
        });

        $('.dd').nestable({maxDepth:1 });

    });
</script>