@model dynamic

@{
    ViewBag.Title = "title";

}
@section styles{
    @Styles.Render("~/css/datatables")
}
<h2>Users</h2>
<ul class="breadcrumb">
    <li><a href="Index">Index</a></li>
    <li class="active">Users</li>
</ul>
<div class="panel panel-default table-responsive">
    <div class="panel-heading">Users</div>
    <div class="padding-md clearfix">
        <div class="row">
            <div class="col-md-10">
                <section class="widget">
                    <div class="body">
                        <div class="panel-group" id="accordion3">

                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/js/datatables")


}

<script>
    $(document).ready(function () {
        var columns;
        var editor;
        var oTable;
        var mData;
        var records = [];

   
        var usersRef = new Firebase('https://draftboard.firebaseio.com/Users/user');
        var leaguesRef = new Firebase('https://draftboard.firebaseio.com/Leagues');
        //console.log(usersRef.toString());
        var usersAdded = function (snapShot) {
            console.log('snapShot ' + JSON.stringify(snapShot.val()));
            var userId = snapShot.name();
            var numLeagues = 0;

            $('#accordion3').append(renderAccordion(snapShot.name(), snapShot.val().UserName));
                var userLeaguesRef = usersRef.
                child(snapShot.name()).
                child("Leagues");

                

                

                userLeaguesRef.once("value", function (snap) {
                   
                   

                    numLeagues = snap.numChildren();
                    
                    if (numLeagues !== 0) {
                        console.log('wtf ' + numLeagues);
                        userLeaguesRef.on("child_added", function (leagueSnap) {
                            //console.log('child added ' + leagueSnap.name());
                            leaguesRef.
                            child(leagueSnap.name()).
                            once("value", function (leagueChildSnap) {
                                console.log('ffjfjfjfjfj');
                                var o = leagueChildSnap.val();
                                //o.UserId = userId;
                                o.DT_RowId = leagueChildSnap.name();
                                records.push(o);
                                console.log('records length ' + records.length);
                                console.log('numLeagues ' + numLeagues);
                                if (records.length == numLeagues) {

                                    //console.log('records ' + JSON.stringify(records));
                                    initializeDataTable(userId);
                                }
                            });
                        });
                    }
                    else {
                       
                        initializeDataTable(userId);
                    }

                });

        };



        
        defineTableColumns();
        defineEditor();
        defineEvents();

        jQuery.removeFromArray = function (value, arr) {
            //console.log('object to be removed ' + JSON.stringify(value));
            return jQuery.grep(arr, function (elem, index) {
                //console.log(' removing ' + elem.DT_RowId);
                return elem.DT_RowId !== value;
            });
        };

        function defineTableColumns() {
            columns = [
        { mData: "Name", sTitle: "League Name"},
     
            ];

        }

        function defineEditor() {
            editor = new $.fn.dataTable.Editor({
                "domTable": "#dataTable",
                "fields": [{
                    "label": "LeagueName:",
                    "name": "LeagueName",
                    "attr": { "class": "form-control parsley-validated required", "placeholder": "Location", "required": "true", "parsley-required": "true" },
                },
                {
                    "label": "UserId:",
                    "name": "UserId",

                },
                ],
                "ajax": function (method, url, data, successCallback, errorCallback) {

                    var id = null;
                    var obj = {};

                    //console.log('data action ' + data.action);

                    if (data.action === 'create') {

                        obj.Name = data.data.LeagueName;
                        console.log('userId ' + data.data.UserId);
                        try {

                            id = leaguesRef.push(obj, function (err) {
                                if (!err) {
                                    usersRef.
                                    child(data.data.UserId).
                                    child("Leagues").
                                    child(id).
                                    set(Firebase.ServerValue.TIMESTAMP, function(err){
                                        if (!err)
                                            successCallback({ "id": id });
                                        else
                                            errorCallback();
                                    });
                                    
                                }
                                else
                                    errorCallback();

                            }).name();

                        } catch (e) {
                            console.log('error ' + e);
                        }

                    }
                    else if (data.action === 'edit') {
                        id = data.id;
                        //console.log('edit id' + data.id);
                        obj.Name = data.data.LeagueName;


                        try {
                            //console.log(exercisesRef.child(id).toString());

                            leaguesRef.child(id).update(obj, function (err) {
                                //console.log('test');

                                successCallback({ "id": id });

                            });
                        } catch (e) {
                            console.log(JSON.stringify(e));
                        }

                    }
                    else if (data.action === 'remove') {

                        try {
                            var r = [];

                            leaguesRef.child(data.data[0]).remove(function (err) {

                                if (!err) {
                                    //r = jQuery.removeFromArray(data.data[0], records);
                                    //records = r;
                                    successCallback({ "id": id });
                                }


                            });
                        } catch (e) {

                        }

                    }

                }
            });

            editor.on('onOpen', function () {

                $("div.DTE_Body_Content form").attr("parsley-validate", "");
                $("div.DTE_Body_Content form").parsley();
            });

            editor.on('onPreSubmit', function () {
                var f = $('form');
                if (f.css('display') != 'none') {
                    var valid = f.parsley('validate');
                    console.log('valid ' + valid);
                    if (valid == false)
                        return false;
                }
            });





        }



        function defineEvents() {

                usersRef.on('child_added', usersAdded);

        }



        function initializeDataTable(tableId) {
            //console.log('initialized ' + tableId);
            try {
                oTable = $('#tbl_' + tableId).dataTable({
                    "sDom": "<'row'<'col-xs-6'T><'col-xs-6'f>r>t<'row'<'col-xs-6'i><'col-xs-6'p>>",
                    "aaData": records,
                    "aoColumns": columns,
                    "oTableTools": {
                        "sRowSelect": "single",
                        "aButtons": [
                            { "sExtends": "editor_create", "editor": editor, "sButtonClass": "btn btn-primary" },
                            { "sExtends": "editor_edit", "editor": editor, "sButtonClass": "btn btn-primary" },
                            { "sExtends": "editor_remove", "editor": editor, "sButtonClass": "btn btn-warning" }
                        ]
                    },
                    "bDestroy": true,


                });
            } catch (e) {
                console.log(e);
            }

            if (oTable) {
                $('#ToolTables_tbl_' + tableId + "_0").on('click', function () {
                    editor.set('UserId', tableId);
                });
                $('#ToolTables_tbl_' + tableId + "_1").on('click', function () {
                    editor.set('UserId', tableId);
                });
                $('#ToolTables_tbl_' + tableId + "_2").on('click', function () {
                    editor.set('UserId', tableId);
                });
            }
        }


        function renderAccordion(collapseId, userName) {
           // console.log('collapseId ' + collapseId);
           //console.log('userName ' + userName);
            //console.log('collapseId ' + collapseId);
            var s = "<div class=\"panel\">"
                    + "<div class=\"row panel-heading\">"
                        + "<div class=\"col-md-12\">"
                            + "<div class=\"panel-heading\">"
                                + "<a class=\"accordion-toggle\" id=\"acc_" + collapseId + "\" data-toggle=\"collapse\" href=\"#" + collapseId + "\">"
                                  + userName
                                + "</a>"
                            + "</div>"
                        + "</div>"
                    + "</div>"
                    + "<div id=\"" + collapseId + "\" class=\"panel-collapse collapse\" style=\"height: 0px;\">"
                        + "<div class=\"panel-body\">"
                                + "<header>"
                                + "<h4>"
                                + "<i class=\"fa fa-list-alt\"></i>"
                                + "Leagues"
                                + "</h4>"
                                + "</header>"
                          + "<table class=\"table table-striped table-bordered dataTable\" id=\"tbl_" + collapseId + "\">"
                            + "<thead>"
                                + "<tr>"
                                        + "<th>"
                                            + "League Name"
                                        + "</th>"
                                    + "</tr>"
                                + "</thead>"
                            + "</table>"
                        + "</div>"
                    + "</div>"
                + "</div>";

            return s;
        }
        

    });
</script>
